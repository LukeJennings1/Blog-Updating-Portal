[{"/Users/mac1/Node.JS/My-Coding-Blog/frontendupdater/src/index.js":"1","/Users/mac1/Node.JS/My-Coding-Blog/frontendupdater/src/App.js":"2","/Users/mac1/Node.JS/Blog-Updating-Portal/src/index.js":"3","/Users/mac1/Node.JS/Blog-Updating-Portal/src/App.js":"4"},{"size":189,"mtime":1672248847103,"results":"5","hashOfConfig":"6"},{"size":3189,"mtime":1672831710272,"results":"7","hashOfConfig":"6"},{"size":189,"mtime":1672248847103,"results":"8","hashOfConfig":"9"},{"size":3189,"mtime":1672831710272,"results":"10","hashOfConfig":"9"},{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13crvhy",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r8ok9g",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/mac1/Node.JS/My-Coding-Blog/frontendupdater/src/index.js",[],[],"/Users/mac1/Node.JS/My-Coding-Blog/frontendupdater/src/App.js",["24","25","26"],[],"/Users/mac1/Node.JS/Blog-Updating-Portal/src/index.js",[],[],"/Users/mac1/Node.JS/Blog-Updating-Portal/src/App.js",["27","28","29"],[],"import './App.css';\nimport {useState, useEffect} from 'react'\n\nfunction App() {\n\n//   const Submitnewarticle = async () => {\n//     const fetchedData = await fetch('http://localhost:3001/posts') // fetch the api\n\n// }\n//   Submitnewarticle()\n  const [apiData, setApiData] = useState([]);\n\nconst [BlogTitle, SetBlogTitle] = useState()\nconst [BlogSubTitle, SetBlogSubTitle] = useState()\nconst [BlogBody, SetBlogBody] = useState()\nconst newBlogPostdata = {\n  BlogTitle,\n  BlogSubTitle,\n  BlogBody,\n}\nconst [blogarticleposts, setblogarticleposts] = useState([])\nconst [blogarticlcomments, setblogarticlecomments] = useState([])\n\n\nuseEffect(() => {\n  const fetchblogposts = async () => { // fetches blog posts from the blog post api\n    const fetchapiaddress = await fetch('https://my-blog.up.railway.app/posts')\n    fetchapiaddress.json().then((result) => {setblogarticleposts(result)}).catch((err) => console.log(err))\n  }\n  const fetchblogcomments = async () => {\n    const fetchapiaddress = await fetch('https://my-blog.up.railway.app/comments')\n    fetchapiaddress.json().then((result) => {setblogarticlecomments(result); console.log(result)}).catch((err) => {console.log(err)})\n  } \n  fetchblogcomments()\n  fetchblogposts()\n},[]);\n\n  const newblogpost = async (e) => { \n    console.log(BlogTitle,BlogBody,BlogSubTitle)\n    e.preventDefault();\n    const fetchposts = await fetch('https://my-blog.up.railway.app/newarticle', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newBlogPostdata)\n    })\n  }\n\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <form>\n          <input type = 'Text' placeholder='Blog Title' onChange={(e) => {SetBlogTitle(e.target.value)}} name = 'blogTitle'></input>\n          <input type = 'Text' placeholder='Blog Title' onChange={(e) => {SetBlogSubTitle(e.target.value)}} name = 'blogSubTitle'></input>\n          <textarea placeholder='Blog Title' onChange={(e) => {SetBlogBody(e.target.value)}} name = 'blogSubTitle'></textarea>\n          <input type = 'submit' onClick={(e) => {newblogpost(e)}}></input>\n        </form>\n      </header>\n      <div>\n        {blogarticlcomments.map((item) => {\n          return (\n            <div key = {item._id}>\n              <div>{item.username}</div>\n              <div>{item.message}</div>\n              <form action='https://my-blog.up.railway.app/deletecomment' method='POST'>\n                <input type=\"hidden\"  name = 'id' value={item._id}></input>\n                  <button type='submit' placeholder='Delete'>Delete Comment</button>\n              </form>\n            </div>\n          )\n        })}\n      </div>\n\n      <div>{blogarticleposts.map((item) => {\n        console.log(item)\n        return (\n          <div key={item._id}>\n            {item.blogTitle}\n             <form action='https://my-blog.up.railway.app/delete' method='POST'>\n               <input type=\"hidden\" name = 'id' value={item._id}></input>\n                  <button type='submit' placeholder='Delete'>Delete Post</button>\n                </form>\n          </div>\n        )\n      })}</div>\n    </div>\n  );\n}\n\n\n\n\n\n\nexport default App;\n",{"ruleId":"30","severity":1,"message":"31","line":11,"column":10,"nodeType":"32","messageId":"33","endLine":11,"endColumn":17},{"ruleId":"30","severity":1,"message":"34","line":11,"column":19,"nodeType":"32","messageId":"33","endLine":11,"endColumn":29},{"ruleId":"30","severity":1,"message":"35","line":41,"column":11,"nodeType":"32","messageId":"33","endLine":41,"endColumn":21},{"ruleId":"30","severity":1,"message":"31","line":11,"column":10,"nodeType":"32","messageId":"33","endLine":11,"endColumn":17},{"ruleId":"30","severity":1,"message":"34","line":11,"column":19,"nodeType":"32","messageId":"33","endLine":11,"endColumn":29},{"ruleId":"30","severity":1,"message":"35","line":41,"column":11,"nodeType":"32","messageId":"33","endLine":41,"endColumn":21},"no-unused-vars","'apiData' is assigned a value but never used.","Identifier","unusedVar","'setApiData' is assigned a value but never used.","'fetchposts' is assigned a value but never used."]